basePath: /api/v1
definitions:
  handlers.CreateShoeDetailRequest:
    properties:
      shoe_detail:
        $ref: '#/definitions/models.ShoeDetail'
      shoe_model:
        $ref: '#/definitions/models.ShoeModel'
    type: object
  models.ShoeDetail:
    properties:
      model_id:
        type: integer
      shoe_id:
        type: integer
      size:
        type: integer
      stock:
        type: integer
    type: object
  models.ShoeModel:
    properties:
      model_id:
        type: integer
      name:
        type: string
      price:
        type: integer
    type: object
host: localhost:50052
info:
  contact: {}
  description: This is the API documentation for the CRUD NAAH PROJECT, a comprehensive
    system designed to manage shoe models and customer interactions.
  title: CRUD NAAH PROJECT API
  version: 1.0.0
paths:
  /customer/shoe-details:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all available shoe details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ShoeDetail'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Fetch all shoe details for customers
      tags:
      - shoe-details
  /customer/shoe-details/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific shoe detail by its ID
      parameters:
      - description: Shoe Detail ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShoeDetail'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Fetch a shoe detail by ID for customers
      tags:
      - shoe-details
  /shoe-details:
    get:
      consumes:
      - application/json
      description: Retrieve all shoe details including shoe_id, model_id, size, stock,
        name, and price
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all shoe details
      tags:
      - shoe-details
    post:
      consumes:
      - application/json
      description: Add a new shoe detail and model to the database
      parameters:
      - description: Shoe Detail and Model
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateShoeDetailRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ShoeDetail'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new shoe detail and model
      tags:
      - shoe-details
  /shoe-details/{id}:
    delete:
      consumes:
      - application/json
      description: Remove a shoe detail from the database using the shoe ID
      parameters:
      - description: Shoe ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a shoe detail by ID
      tags:
      - shoe-details
    get:
      consumes:
      - application/json
      description: Retrieve a specific shoe detail by shoe_id including name and price
      parameters:
      - description: Shoe ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a shoe detail by ID
      tags:
      - shoe-details
swagger: "2.0"
